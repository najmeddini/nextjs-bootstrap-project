// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String
  tokenBalance  Int       @default(100) // Registration bonus
  dailyTokens   Int       @default(50)  // Daily free tokens
  plan          String    @default("free") // free, starter, pro, business
  referralCode  String    @unique @default(cuid())
  referredBy    String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  lastTokenReset DateTime @default(now())
  
  projects      Project[]
  tokenUsage    TokenUsage[]
  payments      Payment[]
}

model Project {
  id          String    @id @default(cuid())
  name        String
  userId      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  versions    ContentVersion[]
}

model ContentVersion {
  id          String    @id @default(cuid())
  projectId   String
  type        String    // origin, md, humanized, bullet, manual
  content     String
  tokensUsed  Int       @default(0)
  aiScore     Float?    // AI detection score
  createdAt   DateTime  @default(now())
  
  project     Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model TokenUsage {
  id          String    @id @default(cuid())
  userId      String
  amount      Int
  type        String    // daily, purchase, referral, bonus
  description String
  createdAt   DateTime  @default(now())
  
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Payment {
  id            String    @id @default(cuid())
  userId        String
  stripeId      String    @unique
  amount        Int       // in cents
  tokens        Int
  plan          String
  status        String    @default("pending")
  createdAt     DateTime  @default(now())
  
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model AdminConfig {
  id          String    @id @default(cuid())
  key         String    @unique
  value       String
  updatedAt   DateTime  @updatedAt
}

model Coupon {
  id          String    @id @default(cuid())
  code        String    @unique
  discount    Int       // percentage
  tokens      Int?      // bonus tokens
  maxUses     Int       @default(1)
  usedCount   Int       @default(0)
  active      Boolean   @default(true)
  expiresAt   DateTime?
  createdAt   DateTime  @default(now())
}
